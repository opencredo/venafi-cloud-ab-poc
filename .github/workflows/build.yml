name: 'Build'

on:
  push:
    paths: 
    - 'go/**'
    - 'docker/**'
    branches:
    - master
  pull_request:
    paths: 
    - 'go/**'
    - 'docker/**'

jobs:
  build:
    name: 'build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Install yq
      run: |
        sudo wget -O /usr/local/bin/yq \
             https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Bump version and push
      id: new_version
      uses: anothrNick/github-tag-action@1.22.0
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch

    - name: Build Ledger Image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: yoink00/ledger
        dockerfile: docker/ledger/Dockerfile
        path: go
        build_args: GIT_COMMIT_ID=${{ github.sha }}
        tag_with_ref: true
        tags: ${{ steps.new_version.outputs.new_tag }}
        tag_with_sha: false
        push: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}

    - name: Build Txnsim Image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: yoink00/txnsim
        dockerfile: docker/txnsim/Dockerfile
        path: go
        build_args: GIT_COMMIT_ID=${{ github.sha }}
        tag_with_ref: true
        tags: ${{ steps.new_version.outputs.new_tag }}
        tag_with_sha: false
        push: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}

    - name: Update versions in charts
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: helm
      env:
        RELEASE_VERSION: ${{ steps.new_version.outputs.new_tag }}
        GIT_PAT: ${{ secrets.GIT_PAT }}
        GIT_REPO: ${{ github.repository }}
      run: |
        git config --global user.email "noreply@opencredo.com"
        git config --global user.name "Robot Overlord"

        git remote set-url origin https://x-access-token:${GIT_PAT}@github.com/${GIT_REPO}.git

        git remote -v

        # Update main Chart versions
        yq write --inplace vab/Chart.yaml version $RELEASE_VERSION
        yq write --inplace vab/Chart.yaml appVersion $RELEASE_VERSION
        yq write --inplace vab/Chart.yaml "dependencies.(tags.*==local).version" $RELEASE_VERSION
        git add vab/Chart.yaml

        # Update version in service specific charts
        for f in local/*; do
          yq write --inplace $f/Chart.yaml version $RELEASE_VERSION
          yq write --inplace $f/Chart.yaml appVersion $RELEASE_VERSION
          yq write --inplace $f/values.yaml image.tag $RELEASE_VERSION
          git add $f/Chart.yaml
          git add $f/values.yaml
        done

        git commit -m "Update Helm versions to $RELEASE_VERSION"
        git push origin master
