name: 'Helm'

on:
  push:
    paths: 
    - 'helm/**'
    branches:
    - master
  pull_request:
    paths: 
    - 'helm/**'

env:
  GCP_REGION: europe-west2
  GCP_CLUSTER: ocvab-cluster-model-adder

jobs:
  helm:
    name: 'Helm'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Helm
      uses: azure/setup-helm@v1

    - name: Setup gcloud
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Get Kubeconfig
      run: gcloud container clusters get-credentials "$GCP_CLUSTER" --region "$GCP_REGION"

    - name: Helm Lint
      run: |
        helm lint vab
        for f in local/*; do
          helm lint $f
        done
      working-directory: helm

    - name: Helm repos
      run: |
        helm repo add linkerd https://helm.linkerd.io/stable

    - name: Install or upgrade Chart
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: helm
      run: |
        mkdir -p vab/charts
        cp -r local/* vab/charts
        helm dependency update vab
        release_name=$(helm list -o json | jq '.[] | select(.chart != null) | select(.chart | startswith("vab")) | .name' -r | head -1)
        if [[ -z "$release_name" ]]; then
          echo "Installing VAB chart"
          helm install vab -g \
            --set "linkerd2.global.identityTrustAnchorsPEM=$LINKERD2_GLOBAL_IDENTITYTRUSTANCHORSPEM" \
            --set "linkerd2.identity.issuer.crtExpiry=$LINKERD2_IDENTITY_ISSUER_CRTEXPIRY" \
            --set "linkerd2.identity.issuer.tls.crtPEM=$LINKERD2_IDENTITY_ISSUER_TLS_CRTPEM" \
            --set "linkerd2.identity.issuer.tls.keyPEM=$LINKERD2_IDENTITY_ISSUER_TLS_KEYPEM" \
            --set "users={$USERS}"
        else
          echo "Upgrading VAB chart"
          helm upgrade "$release_name" vab \
            --set "linkerd2.global.identityTrustAnchorsPEM=$LINKERD2_GLOBAL_IDENTITYTRUSTANCHORSPEM" \
            --set "linkerd2.identity.issuer.crtExpiry=$LINKERD2_IDENTITY_ISSUER_CRTEXPIRY" \
            --set "linkerd2.identity.issuer.tls.crtPEM=$LINKERD2_IDENTITY_ISSUER_TLS_CRTPEM" \
            --set "linkerd2.identity.issuer.tls.keyPEM=$LINKERD2_IDENTITY_ISSUER_TLS_KEYPEM" \
            --set "users={$USERS}"
        fi
      env:
        LINKERD2_GLOBAL_IDENTITYTRUSTANCHORSPEM: ${{ secrets.LINKERD2_GLOBAL_IDENTITYTRUSTANCHORSPEM }}
        LINKERD2_IDENTITY_ISSUER_CRTEXPIRY: ${{ secrets.LINKERD2_IDENTITY_ISSUER_CRTEXPIRY }}
        LINKERD2_IDENTITY_ISSUER_TLS_CRTPEM: ${{ secrets.LINKERD2_IDENTITY_ISSUER_TLS_CRTPEM }}
        LINKERD2_IDENTITY_ISSUER_TLS_KEYPEM: ${{ secrets.LINKERD2_IDENTITY_ISSUER_TLS_KEYPEM }}
        USERS: ${{ secrets.USERS }}
        GIT_COMMIT_ID: ${{ github.sha }}

